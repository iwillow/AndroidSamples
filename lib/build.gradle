apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven{
        url 'https://maven.aliyun.com/repository/google'
    }
    maven{
        url 'https://maven.aliyun.com/repository/jcenter'
    }
    maven { url "https://jitpack.io" }
}

group='com.github.iwillow'
version = '0.0.1'

android {
    compileSdkVersion Integer.valueOf(compile_sdk_version)
    buildToolsVersion build_tool_version
    defaultConfig {
        minSdkVersion Integer.valueOf(min_sdk_version)
        targetSdkVersion Integer.valueOf(target_sdk_version)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}